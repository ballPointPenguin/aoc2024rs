Advent of Code Day 8

Please find 08-text.md in the project files for a description of today's puzzle.

We're working through the daily "Advent of Code" puzzles, using Rust.
Previous days puzzles and my rust implementations are now in this project as well, so feel free to catch up on where we've been the last few days, and how my Rust programming is coming along.

Today the input data is another "2D Grid" as ASCII characters ([a-zA-Z0-9] with "empty" spaces represented by dots '.').

We should consider how to represent the input data in a way that is easy to work with. Consider that in our calculated representation, a "cell" in the grid may need to contain more than one datum.

And, for what it's worth, we can try to anticipate that in Part 2, the puzzle author usually throws a curveball at us with the tendency to break the assumptions we've made in Part 1. Flexiable abstractions are often rewarded.

After we've decided how to represent the input data, can you generate a few unit tests for some yet unwritten primary function that will accept some inputs and return an integer?
